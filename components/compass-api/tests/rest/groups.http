@baseUrl = http://localhost:8000/api
@adminToken = ''

### Login as admin
# @name login
POST {{baseUrl}}/auth/login
Content-Type: application/x-www-form-urlencoded

username=admin&password=admin123

### Store admin token
@adminToken = {{login.response.body.access_token}}

### Get all groups
GET {{baseUrl}}/groups
Content-Type: application/json

### Example response:
# {
#   "success": true,
#   "data": [
#     {
#       "id": "64a7b3c9d2e1f0a5b6c7d8e9",
#       "name": "Team A",
#       "description": "Development team A",
#       "order": 1,
#       "created_at": "2024-03-01T12:00:00",
#       "updated_at": "2024-03-01T12:00:00",
#       "created_by": "admin"
#     }
#   ],
#   "total": 1,
#   "skip": 0,
#   "limit": 100
# }

### Get group by ID
GET {{baseUrl}}/groups/64a7b3c9d2e1f0a5b6c7d8e9
Content-Type: application/json

### Create a new group (admin only)
POST {{baseUrl}}/groups
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "Test Group",
  "description": "Group for testing",
  "order": 10
}

### Update a group (admin only)
PUT {{baseUrl}}/groups/64a7b3c9d2e1f0a5b6c7d8e9
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "Updated Test Group",
  "description": "Updated description",
  "order": 20
}

### Delete a group (admin only)
DELETE {{baseUrl}}/groups/64a7b3c9d2e1f0a5b6c7d8e9
Authorization: Bearer {{adminToken}} 